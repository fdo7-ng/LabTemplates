{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "envPrefix": {
            "type": "string",
            "metadata": {      
                "description": "Prefix used in naming convention for items"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {      
                "description": "Name of the VM, will be combined with envPrefix"
            }
        },
        "genericVmSize": {
            "defaultValue": "standard_B2s",
            "type": "string",
            "metadata": {      
                "description": "VM size"
            }
        }, 
        "adminUserName": {
            "type": "string",
            "metadata": {      
                "description": "Local and domain admin username"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
              "sshPublicKey",
              "password"
            ],
            "metadata": {
              "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
            "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of an existing vnet"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Name of an existing subnet"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resource group which contains the existing vnet"
            }
        }
    },
    "variables": {
        "diagStorageName": "[take(concat(toLower(parameters('envPrefix')),'diagsa',uniqueString(resourceGroup().id)),24)]",
        "vmName": "[concat(parameters('envPrefix'),'-',parameters('vmName'))]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPasswordOrKey')]"
                }
              ]
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "2019-03-01",
            "location": "[resourceGroup().location]",
            "properties": {
        
                "hardwareProfile": {
                    "vmSize": "[parameters('genericVmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSqlServer",
                        "offer": "SQL2017-Ubuntu1604",
                        "sku": "SQLDEV",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('vmName'),'-OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "diskSizeGB": 64
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName'),'-NIC'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('diagStorageName')), '2016-01-01').primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [],
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName'),'-NIC'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmName'),'-NIC')]",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "properties": {
        
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('subnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmName'),'-PIP'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmName'),'-PIP'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmName'),'-PIP')]",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('diagStorageName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {},
            "dependsOn": []
        }
    ]
}